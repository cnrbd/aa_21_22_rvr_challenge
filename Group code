# sonar example 2022-02-21
import board, busio, time, math, digitalio, adafruit_hcsr04
from ssis_rvr   import pin
from sphero_rvr import RVRDrive

rvr   = RVRDrive(uart = busio.UART(pin.TX, pin.RX, baudrate=115200))
sonar = adafruit_hcsr04.HCSR04(trigger_pin=pin.TRIGGER, echo_pin=pin.ECHO)

time.sleep(0.5)

rvr.set_all_leds(255,0,0) #set leds to red
time.sleep(0.1)
rvr.set_all_leds(0,255,0) #set leds to green
time.sleep(0.1)
rvr.set_all_leds(0,0,255) #set leds to blue
time.sleep(0.1) #turn off
rvr.set_all_leds(255,255,255) #turn off leds or make them all black



print("starting up")

rvr.sensor_start()

print("sensor_start")


MAX_SPEED = 100
rvr.sensor_start()

start_time = time.monotonic()
elapsed_time = time.monotonic() - start_time

# drive to coordinates (0,1.8)
# elapsed time: 6.0 seconds
rvr.drive_to_position_si(0, 0, 1.8, 1)
while(elapsed_time < 6.0):
    elapsed_time = time.monotonic() - start_time
    
    time.sleep(0.1)

# drive at heading of 90 until x coordinate is 0.6
# elapsed time: 3.0 seconds
start_time = time.monotonic()
elapsed_time = time.monotonic() - start_time
rvr.update_sensors()

setpoint = 32
k = 120
while(elapsed_time < 8.0):
    elapsed_time = time.monotonic() - start_time
    rvr.update_sensors()
  
    try: 
    sensor_distance = sonar.distance 
    
    current_x_coordinate = rvr.get_x()
    
    
    error = setpoint - sensor_distance
    
    output = k*error

    if(output > MAX_SPEED ):
        output = MAX_SPEED
    if(output < -MAX_SPEED):
        output = -MAX_SPEED
    
    
    rvr.setMotors(output,output)
    
    time.sleep(0.2)
    
rvr.stop

rvr.drive(0,40)
time.sleep(2.0)
rvr.drive(100, 40)
time.sleep(1.0)
rvr.setMotors(100, 100)
